[1mdiff --git a/README.md b/README.md[m
[1mindex 9aa0f1b..82ede56 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,56 +1,98 @@[m
[32m+[m
 # Spot Report Secondary Task[m
 [m
[31m-Software for the paper; "Spot Report: Real-time Pygame Based Secondary Task For Use In Human-Robot Interaction User Experiments" (Ali, A., Banerjee, R., Jo, W., Robert, L.P. & Tilbury, D.M. 2023). DOI: https://doi.org/...[m
[32m+[m[32m[Paper](https://doi.org/...)[m
[32m+[m
[32m+[m[32mA Pygame-based implementation of a new secondary task for use in human-robot interaction (HRI) studies. We have named the secondary task as Spot Report task, where the user counts the targeted objects shown in static images. A key element of our program is the ability to integrate it with other primary applications, such as one developed in Unreal Engine, using Lab Streaming Layer (LSL).[m
[32m+[m
[32m+[m[32m## Motivation[m
[32m+[m
[32m+[m[32mThe development of the program was motivated by the fact that to the best of our knowledge, there were no suitable secondary tasks available for HRI studies in the military domain. In addition, it is challenging to integrate a standalone secondary task with game development engines such as Unreal Engine or Unity. By leveraging the expertise of military experts and LSL, the Spot Report addresses both of these gaps. Additionally, as the program developed here is standalone, it can quite easily be adapted for other domains by either changing the images and labels used for the Spot Report task or by adapting the game behavior for the particular domain.[m
[32m+[m
[32m+[m[32m## What this Repo contains?[m
[32m+[m
[32m+[m[32mThe repo hosts the code for (a) The Spot Report program, (b) The task and training images used for our domain (military) application (c) LSL functionality to stream data to primary application.[m
[32m+[m
[32m+[m[32m## Dependencies[m
[32m+[m
[32m+[m[32mFirstly, clone this github repository, all the required code is contained within the 'src' folder.[m
[32m+[m[32m* `git clone https://github.com/UMich-MAVRIC/SpotReport.git`[m
[32m+[m
[32m+[m[32mBefore moving forward please ensure you have Python3 installed and an IDE such as VScode to run this codebase. We performed all testing for this program on Python 3.9.7.[m
[32m+[m
[32m+[m[32mInstall the following dependencies, using the terminal before running the code:[m
[32m+[m
[32m+[m[32m* `pip install -r requirements.txt`[m
[32m+[m
[32m+[m[32m* On all non-Windows platform and for some Windows/Python combination, a shared liblsl is required. This can be done by either using:[m
[32m+[m[32m  * For most Linux and Windows distributions:[m[41m [m
[32m+[m[32m    `conda install -c conda-forge liblsl`[m
[32m+[m[32m  * For Mac devices:[m
[32m+[m[32m    `brew install labstreaminglayer/tap/lsl`[m
[32m+[m
[32m+[m[32m## How to Run?[m
[32m+[m
[32m+[m[32mTo run this program, it is necessary to run the `spt_trigger_outlet` and `spotreport.py` programs simulataneously in two separate terminals.[m
[32m+[m
[32m+[m[32mThis can be done by running the following lines in bash -[m[41m [m
[32m+[m[32m`python3 src\pylsl_outlet_example\spt_trigger_outlet.py` - In one bash terminal[m
[32m+[m[32m`python3 src\spotreport.py` - In other terminal[m
[32m+[m
[32m+[m[32mNote - Once `spt_trigger_outlet.py` is run press the 0, 1 or 2 key to send data to the `spotreport.py` program.[m
[32m+[m
[32m+[m[32m## Game Behaviour[m
[32m+[m
[32m+[m[32m1. On completion of the above steps, the menu of the game will pop up.[m
 [m
[31m-## Abstract[m
[31m-This repositoy is to disseminate a new spot report task as a secondary task. It can be integrated with the primary task developed, for example, in Unreal Engine, using Lab Streaming Layer (LSL). The spot report task requires counting target objects in static images. LSL facilitates real-time communication between the primary task and the spot report task. The spot report task is developed in Python, utilizing the Pygame library with other libraries and packages.[m
[32m+[m[32m2. Click and type in the textbox for the subject ID and for the condition number. Without this you won't be able to start the game.[m
 [m
[31m-## Software[m
[32m+[m[32m3. Click the Training button. This will start the Training loop and show the training images. After training on 5 images, the program will return to the main menu of the program. Training must be completed at least once before moving to 'step 4'.[m
 [m
[31m-### Dependencies[m
[32m+[m[32m4. Click the Start button. This will start the Task loop and show the task images. If the 165th task image is reached, the task images will repeat from the beginning.[m
 [m
[31m-All implementations were tested with Python 3.9.7.[m
[31m-The following packages are needed (please install with `pip install <package name>`):[m
[32m+[m[32m5. The game can be locked or unlocked at any point by pressing the 'l' key on the keyboard. This is done to pause the game while the user focuses completely on the primary task. In our case, we use this when we want the user to takeover the UGV during the study.[m
 [m
[31m-* `pygame`[m
[31m-* `glob`[m
[31m-* `pandas`[m
[31m-* `csv`[m
[31m-* `datetime`[m
[31m-* `pylsl`[m
[32m+[m[32m6. Press the Esc key on the keyboard anytime during the Task loop to stop the spot report task.[m
 [m
[31m-### Spot Report Implementation[m
[32m+[m[32m7. Explore the results and data. All results will be stored in csv format in the 'output_files' folder.[m
 [m
[31m-The spot report code follows these steps in `spotreport.py`:[m
[32m+[m[32m## Output files[m
 [m
[31m-* x[m
[31m-* x[m
[31m-* while in Training loop:[m
[31m-  * x[m
[31m-  * x[m
[31m-  * x[m
[31m-  * x[m
[31m-  * x[m
[31m-* while in Task loop:[m
[31m-  * x[m
[31m-  * x[m
[31m-  * x[m
[31m-  * x[m
[31m-  * x[m
[32m+[m[32mThere are 5 output files generated in `.csv` format, within the folder `output_files`. They are as follows -[m[41m [m
[32m+[m[32m* `accuracy_(Subject_Id)_(Condition).csv`[m
[32m+[m[32m* `mouse_button_(Subject_No)_(Condition_No).csv`[m
[32m+[m[32m* `mouse_pos_(Subject_No)_(Condition_No).csv`[m
[32m+[m[32m* `score_(Subject_No)_(Condition_No).csv`[m
[32m+[m[32m* `task_time_(Subject_No)_(Condition_No).csv`[m
 [m
[31m-### Use Instructions[m
[32m+[m[32m## LSL[m[41m [m
 [m
[31m-1. Run `python spotreport.py' from the terminal. This will bring up the spot report menu.[m
[32m+[m[32mThe LSL information are sent to the receiving end using channels defined in `pylsl.py`. The information is sent when the previous value of the respective channel changes.[m
 [m
[31m-2. Click and type in the textbox for the subject ID and for the condition number.[m
[32m+[m[32mThe channels are as follows -[m[41m [m
[32m+[m[32m* Current Mouse Positions[m
[32m+[m[32m* When Mouse Button is Pressed or Released[m
[32m+[m[32m* Time between Current and Previous Task[m
[32m+[m[32m* Accuracy achieved on Current Task[m
[32m+[m[32m* Total Score[m
 [m
[31m-3. Click the Training button. This will start the Training loop and show the training images. After training on 5 images, the program will return to the spot report menu.[m
[32m+[m[32m## Paper Source Files and Figures[m
[32m+[m
[32m+[m[32mThe `paper` directory also contains the LaTeX source files for the paper.[m
[32m+[m[32mPaper figures are in `paper/figures`. Figures are also provided in other formats as applicable.[m
[32m+[m
[32m+[m[32m## Miscellaneous[m
 [m
[31m-4. Click the Start button. This will start the Task loop and show the task images. If the 165th task image is reached, the task images will repeat from the beginning. [m
[32m+[m[32mIn this section, we have explained various optional features of our program that can help users of this program in the future.[m
 [m
[31m-5. Press the Esc key on the keyboard anytime during the Task loop to stop the spot report task.[m
[32m+[m[32m1. ### Terminal Arguments[m
[32m+[m
[32m+[m[32mWe have defined a range of arguments using argparse in `read.py` to enable easier adaptation of our program for different screen sizes and for users who want to use a different set of images to run with our program. Please note that the label positions still need to be adjusted directly within the `display.py`. In general our program uses the default parameters that we have used for our application.[m
[32m+[m
[32m+[m[32m2. ### Randomize Images[m
[32m+[m
[32m+[m[32mThere is standalone `.py` file `randomize.py` that can be used to randomize the order of images and update the answer keys in the `answer_keys` folder. This file is not directly part of our program is just a supplementary code to provide users with additional resources.[m
 [m
[31m-6. Explore the results and data. [m
 [m
 ### LSL inlet information[m
 **1. Program trigger**[m
[36m@@ -93,19 +135,3 @@[m [mThe spot report code follows these steps in `spotreport.py`:[m
   * Sampleing rate: _IRREGULAR_RATE_[m
   * Channel format: _cf_float32_[m
 [m
[31m-[m
[31m-### Output Files[m
[31m-* score log[m
[31m-* accuracy log[m
[31m-[m
[31m-[m
[31m-## Paper Source Files and Figures[m
[31m-[m
[31m-The `paper` directory also contains the LaTeX source files for the paper.[m
[31m-Paper figures are in `paper/figures`. Figures are also provided in other formats as applicable.[m
[31m-[m
[31m-[m
[31m-## Misc[m
[31m-[m
[31m-### explain various folders[m
[31m-### explain randomize images[m
